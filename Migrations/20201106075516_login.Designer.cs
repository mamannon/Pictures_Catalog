// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Picture_Catalog;

namespace Picture_Catalog.Migrations
{
    [DbContext(typeof(PictureDatabase))]
    [Migration("20201106075516_login")]
    partial class login
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Picture_Catalog.Picture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("cPictureSetId")
                        .HasColumnType("int");

                    b.Property<string>("mLegend")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("mPictureSet")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("mURL")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("cPictureSetId");

                    b.ToTable("dbPictures");
                });

            modelBuilder.Entity("Picture_Catalog.PictureSet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int?>("cUserId")
                        .HasColumnType("int");

                    b.Property<string>("mPictureSet")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.HasIndex("cUserId");

                    b.ToTable("dbPictureSets");
                });

            modelBuilder.Entity("Picture_Catalog.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("mName")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("mPassword")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<string>("mUsername")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("dbUsers");
                });

            modelBuilder.Entity("Picture_Catalog.Picture", b =>
                {
                    b.HasOne("Picture_Catalog.PictureSet", "cPictureSet")
                        .WithMany("cPictures")
                        .HasForeignKey("cPictureSetId");
                });

            modelBuilder.Entity("Picture_Catalog.PictureSet", b =>
                {
                    b.HasOne("Picture_Catalog.User", "cUser")
                        .WithMany("cPictureSets")
                        .HasForeignKey("cUserId");
                });
#pragma warning restore 612, 618
        }
    }
}
